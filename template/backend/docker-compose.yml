version: '3.8'

services:
  ambev.developerevaluation.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:13
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "53945:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d developer_evaluation"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # ambev.developerevaluation.nosql:
  #   container_name: ambev_developer_evaluation_nosql
  #   image: mongo:8.0
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: developer
  #     MONGO_INITDB_ROOT_PASSWORD: ev@luAt10n
  #   ports:
  #     - "53943:27017"
  #   healthcheck:
  #     test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 10s

  ambev.developerevaluation.cache:
    container_name: ambev_developer_evaluation_cache
    image: redis:7.4.1-alpine
    command: redis-server --requirepass ev@luAt10n
    ports:
      - "53944:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "ev@luAt10n", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  ambev.developerevaluation.webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ${DOCKER_REGISTRY-}ambevdeveloperevaluationwebapi
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "53941:8080"
      - "53942:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      ambev.developerevaluation.database:
        condition: service_healthy
      ambev.developerevaluation.cache:
        condition: service_healthy
